{% extends 'base.html.twig' %}

{% block title %}stap {{enrol_step}}{% endblock %}

{% block header %}
<div>
    <nav class="nav nav-masthead justify-content-center float-md-end fw-light">
        <a class="nav-link fw-bold py-1 px-0 {%if enrol_step == 1 %}active{%endif%}" href="#" onclick="return false;">stap 1</a>
        <a class="nav-link fw-bold py-1 px-0 {%if enrol_step == 2 %}active{%endif%}" href="#" onclick="return false;">stap 2</a>
        <a class="nav-link fw-bold py-1 px-0 {%if enrol_step == 3 %}active{%endif%}" href="#" onclick="return false;">stap 3</a>
        <a class="nav-link fw-bold py-1 px-0 {%if enrol_step == 4 %}active{%endif%}" href="#" onclick="return false;">stap 4</a>
        <a class="nav-link fw-bold py-1 px-0 {%if enrol_step == 5 %}active{%endif%}" href="#" onclick="return false;">stap 5</a>
    </nav>
</div>
{% endblock %}

{% block main %}
    {#<h1>STAP <i class="bi bi-{{enrol_step}}-square"></i> - {{enrol_title}}</h1>#}
    <h1>{{enrol_title}}</h1>

    {{enrol_info|raw}}

    {{ form_start(form, {'attr': {'class': 'needs-validation'}}) }}
        {{ form_widget(form) }}
        {% if enrol_prev %}<a href="{{ path(enrol_prev) }}" class="btn btn-secondary">Vorige</a>{% endif %}
        <button class="btn btn-primary" type="submit" id="submit">{{ button_label|default(enrol_btn) }}</button>
    {{ form_end(form) }}

{% endblock %}

{% block javascripts %}
  {{ parent() }}
<script>

let acteurCheckbox = document.getElementById("associate_base_categoryPreferences_0");
let figurantCheckbox = document.getElementById("associate_base_categoryPreferences_1");

let extraFields = document.getElementsByClassName('acteur-figurant');


function hideExtraFields() {
    for (let i = 0; i < extraFields.length; i++) {
        extraFields[i].classList.add("d-none");
    }
}

function showExtraFields() {
    for (let i = 0; i < extraFields.length; i++) {
        extraFields[i].classList.remove("d-none");
    }
}

function ActeurFigurantIsChecked() {
    if ( acteurCheckbox.checked || figurantCheckbox.checked ) {
        showExtraFields();
    } else {
        hideExtraFields();
    }
}

if(typeof(acteurCheckbox) != 'undefined' && acteurCheckbox != null && typeof(figurantCheckbox) != 'undefined' && figurantCheckbox != null) {
    acteurCheckbox.addEventListener( "change", ActeurFigurantIsChecked);
    figurantCheckbox.addEventListener( "change", ActeurFigurantIsChecked);
    ActeurFigurantIsChecked();
}

function DisableSubmit() {
    var submit = document.getElementById("submit");
    submit.disabled = true;
    submit.classList.add('disabled');
    submit.classList.add('placeholder-wave');
    var loader = document.getElementById("loader");
    loader.classList.remove("d-none")
}

function EnableSubmit() {
    var submit = document.getElementById("submit");
    submit.disabled = false;
    submit.classList.remove('disabled');
    submit.classList.remove('placeholder-wave');
    var loader = document.getElementById("loader");
    loader.classList.add("d-none")
}

// Disabling form submissions if there are invalid fields
(function() {
    'use strict';
    window.addEventListener('load', function() {
        // Set submit button
        EnableSubmit();
        // Fetch all the forms we want to apply custom Bootstrap validation styles to
        var forms = document.getElementsByClassName('needs-validation');
        // Loop over them and prevent submission
        var validation = Array.prototype.filter.call(forms, function(form) {
            form.addEventListener('submit', function(event) {
                DisableSubmit();
                if (form.checkValidity() === false) {
                    event.preventDefault();
                    event.stopPropagation();
                    EnableSubmit();
                }
                //form.classList.add('was-validated');
            }, false);
        });
    }, false);
})();
</script>
{% endblock %}
